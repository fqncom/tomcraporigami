<#@ template language="C#" debug="false" hostspecific="true"#>
<#@ include file="EF.Utility.CS.ttinclude"#><#@
 output extension=".cs"#>
 
<#

CodeGenerationTools code = new CodeGenerationTools(this);
MetadataLoader loader = new MetadataLoader(this);
CodeRegion region = new CodeRegion(this, 1);
MetadataTools ef = new MetadataTools(this);

string inputFile = @"..\\fqn.ItcastOA.Model\\OA_Model.edmx";

EdmItemCollection ItemCollection = loader.CreateEdmItemCollection(inputFile);
string namespaceName = code.VsNamespaceSuggestion();

EntityFrameworkTemplateFileManager fileManager = EntityFrameworkTemplateFileManager.Create(this);

#>

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using fqn.ItcastOA.DalFactory;
using fqn.ItcastOA.IBll;
using fqn.ItcastOA.IDal;
using fqn.ItcastOA.Model;
using fqn.ItcastOA.Model.Enum;
using fqn.ItcastOA.Model.SearchModel;

namespace fqn.ItcastOA.Bll
{
<#
// Emit Entity Types

foreach (EntityType entity in ItemCollection.GetItems<EntityType>().OrderBy(e => e.Name))
{
    //fileManager.StartNewFile(entity.Name + "RepositoryExt.cs");
    //BeginNamespace(namespaceName, code);    
#>	
	public partial class <#=entity.Name#>Bll :BaseBll<<#=entity.Name#>>,I<#=entity.Name#>Bll
    {
        public override void SetCurrentDal()
        {
			base.CurrentDal = base.GetDbSession.<#=entity.Name#>Dal;
        }
    }   
<#}#>
	
}